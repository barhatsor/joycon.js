/* Gamepad.js // https://github.com/codeitcodes/gamepadjs */
let Gamepad={listeners:{},controller:{},controllers:{on:{press:(e,t)=>{Gamepad.listeners[e]={callback:t,lastValue:0}},move:(e,t)=>{Gamepad.listeners[e+"-move"]={callback:t,lastValue:{x:0,y:0}}},connect:e=>{Gamepad.listeners["controller-connected"]={callback:e}},disconnect:e=>{Gamepad.listeners["controller-disconnected"]={callback:e}}},removeListener:e=>{delete Gamepad.listeners[e]},vibrate:async(e,t)=>{if(e.preset){e=Gamepad.controllers.vibrationPresets[e.preset]}const a={duration:t,strongMagnitude:e.strongMotorIntensity,weakMagnitude:e.mildMotorIntensity};Object.values(Gamepad.controller).forEach((e=>{const t=e.vibrationActuator;t&&t.playEffect("dual-rumble",a)})),await new Promise((e=>{window.setTimeout(e,t)}))},vibrationPresets:{mild:{strongMotorIntensity:0,mildMotorIntensity:.07},medium:{strongMotorIntensity:0,mildMotorIntensity:.14},strong:{strongMotorIntensity:1,mildMotorIntensity:1}}},update:()=>{Gamepad.updateControllers();const e=Gamepad.buttonMap,t=Gamepad.axisMap;Object.values(Gamepad.controller).forEach((a=>{a.buttons.forEach(((t,a)=>{const o=e[a],n=Gamepad.listeners[o];n&&t.value!==n.lastValue&&(n.lastValue=t.value,n.callback(t.value))}));const o=a.axes;let n={};o.forEach(((e,a)=>{const o=t[a][0],r=t[a][1];n[r]||(n[r]={}),n[r][o]=e})),Object.keys(n).forEach((e=>{const t=Gamepad.listeners[e];if(t){const a=n[e];a.x===t.lastValue.x&&a.y===t.lastValue.y||(t.lastValue=a,t.callback({x:a.x,y:a.y}))}}))})),0!==Object.keys(Gamepad.controller).length&&Gamepad.onNextFrame(Gamepad.update)},updateControllers:()=>{navigator.getGamepads().forEach((e=>{e&&void 0!==e.index&&(Gamepad.controller[e.index]=e)}))},addListeners:()=>{window.addEventListener("gamepadconnected",(e=>{Gamepad.controller[e.gamepad.index]=e.gamepad,Gamepad.onNextFrame(Gamepad.update);const t=Gamepad.listeners["controller-connected"];t&&t.callback(e.gamepad)})),window.addEventListener("gamepaddisconnected",(e=>{delete Gamepad.controller[e.gamepad.index];const t=Gamepad.listeners["controller-disconnected"];t&&t.callback(e.gamepad)}))},onNextFrame:e=>{window.requestAnimationFrame(e)},buttonMap:{0:"a",1:"b",2:"x",3:"y",4:"shoulder-left",5:"shoulder-right",6:"trigger-left",7:"trigger-right",8:"select",9:"start",10:"joystick-left",11:"joystick-right",12:"dpad-up",13:"dpad-down",14:"dpad-left",15:"dpad-right",16:"home",17:"share"},axisMap:{0:["x","joystick-left-move"],1:["y","joystick-left-move"],2:["x","joystick-right-move"],3:["y","joystick-right-move"]}};Gamepad.addListeners();
